[{"name": "app.py", "content": "from shiny import App, ui, render\nimport pandas as pd\nimport json\n\n# --- 1. DADOS ANUAIS (incorporados manualmente) ---\ndados_reais = {\n    'created_at': [2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022],\n    'vegan': [29984, 35769, 55278, 91523, 139532, 180491, 334789, 736570, 632623, 468847, 396872],\n    'vegano': [6714, 9423, 17348, 33360, 60307, 89903, 204458, 393177, 353954, 235771, 208015],\n    'vegana': [6168, 8994, 16218, 27314, 39861, 52550, 93595, 297971, 209796, 187781, 159266],\n    'vegetariano': [56063, 54464, 52257, 51838, 62452, 73678, 69676, 129261, 129714, 86762, 80583],\n    'vegetariana': [41435, 42952, 39694, 48331, 56649, 63730, 68871, 139749, 128235, 94627, 79530],\n    'vegane': [38, 58, 120, 274, 156, 182, 165, 764, 1405, 2040, 2547],\n    'lactovegetariana': [122, 141, 118, 110, 203, 204, 439, 1256, 1552, 1070, 796],\n    'ovolactovegetariana': [104, 116, 85, 95, 181, 182, 403, 1166, 1438, 982, 753],\n    'lactovegetariano': [142, 130, 79, 151, 243, 223, 383, 940, 1088, 1112, 434],\n    'ovolactovegetariano': [119, 112, 66, 119, 227, 199, 350, 874, 1001, 1053, 404],\n    'crudivora': [36, 33, 94, 137, 200, 173, 202, 178, 221, 279, 440],\n    'crudivoro': [36, 37, 69, 178, 207, 165, 227, 265, 179, 146, 277],\n    'pescetariana': [14, 17, 16, 45, 59, 70, 60, 202, 409, 607, 261],\n    'frugivoro': [44, 42, 80, 81, 78, 82, 201, 320, 191, 273, 186],\n    'frugivora': [17, 27, 39, 34, 37, 60, 115, 110, 142, 135, 105],\n    'flexitariano': [18, 6, 0, 8, 15, 88, 29, 153, 117, 261, 259],\n    'flexitariana': [0, 6, 2, 5, 11, 23, 60, 148, 127, 138, 133],\n    'ovovegetariano': [2, 3, 6, 7, 5, 12, 9, 35, 40, 48, 24],\n    'semivegetariana': [29, 15, 6, 13, 9, 10, 6, 15, 18, 10, 12],\n    'ovovegetariana': [2, 2, 2, 3, 7, 7, 9, 33, 34, 34, 25],\n    'semivegetariano': [11, 11, 5, 1, 6, 20, 7, 9, 10, 16, 12],\n    'piscitariana': [2, 0, 1, 6, 6, 9, 6, 24, 20, 13, 19],\n    'piscitariano': [1, 3, 0, 2, 0, 3, 7, 9, 19, 13, 9],\n    'pesco-vegetariana': [0, 2, 22, 3, 0, 3, 3, 12, 10, 9, 2],\n    'pescovegetariana': [4, 5, 0, 1, 4, 5, 5, 9, 13, 6, 3],\n    'pescovegetariano': [1, 2, 0, 0, 1, 7, 6, 3, 12, 6, 3],\n    'pesco-vegetariano': [0, 1, 0, 0, 1, 3, 3, 14, 7, 4, 4],\n    'apivegetariano': [0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 1],\n    'apivegetariana': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n}\ndf_anual = pd.DataFrame(dados_reais)\n\n# --- 2. DADOS MENSAIS (incorporados manualmente) ---\ndados_mensais = {\n    'created_at': ['2012-01-01', '2012-02-01', '2012-03-01', '2012-04-01', '2012-05-01', '2012-06-01', '2012-07-01', '2012-08-01', '2012-09-01', '2012-10-01', '2012-11-01', '2012-12-01', '2013-01-01', '2013-02-01', '2013-03-01', '2013-04-01', '2013-05-01', '2013-06-01', '2013-07-01', '2013-08-01', '2013-09-01', '2013-10-01', '2013-11-01', '2013-12-01', '2014-01-01', '2014-02-01', '2014-03-01', '2014-04-01', '2014-05-01', '2014-06-01', '2014-07-01', '2014-08-01', '2014-09-01', '2014-10-01', '2014-11-01', '2014-12-01', '2015-01-01', '2015-02-01', '2015-03-01', '2015-04-01', '2015-05-01', '2015-06-01', '2015-07-01', '2015-08-01', '2015-09-01', '2015-10-01', '2015-11-01', '2015-12-01', '2016-01-01', '2016-02-01', '2016-03-01', '2016-04-01', '2016-05-01', '2016-06-01', '2016-07-01', '2016-08-01', '2016-09-01', '2016-10-01', '2016-11-01', '2016-12-01', '2017-01-01', '2017-02-01', '2017-03-01', '2017-04-01', '2017-05-01', '2017-06-01', '2017-07-01', '2017-08-01', '2017-09-01', '2017-10-01', '2017-11-01', '2017-12-01', '2018-01-01', '2018-02-01', '2018-03-01', '2018-04-01', '2018-05-01', '2018-06-01', '2018-07-01', '2018-08-01', '2018-09-01', '2018-10-01', '2018-11-01', '2018-12-01', '2019-01-01', '2019-02-01', '2019-03-01', '2019-04-01', '2019-05-01', '2019-06-01', '2019-07-01', '2019-08-01', '2019-09-01', '2019-10-01', '2019-11-01', '2019-12-01', '2020-01-01', '2020-02-01', '2020-03-01', '2020-04-01', '2020-05-01', '2020-06-01', '2020-07-01', '2020-08-01', '2020-09-01', '2020-10-01', '2020-11-01', '2020-12-01', '2021-01-01', '2021-02-01', '2021-03-01', '2021-04-01', '2021-05-01', '2021-06-01', '2021-07-01', '2021-08-01', '2021-09-01', '2021-10-01', '2021-11-01', '2021-12-01', '2022-01-01', '2022-02-01', '2022-03-01', '2022-04-01', '2022-05-01', '2022-06-01', '2022-07-01', '2022-08-01', '2022-09-01', '2022-10-01', '2022-11-01', '2022-12-01'],\n    'vegan': [2432, 2477, 2603, 2359, 2311, 2339, 2316, 2226, 2195, 2748, 2963, 3015, 2795, 2718, 3073, 3317, 3051, 2733, 2747, 2786, 2854, 3218, 3088, 3389, 4514, 4049, 4543, 4423, 4920, 4831, 4694, 4390, 4503, 4976, 4956, 5479, 7866, 7035, 7822, 7924, 7472, 7505, 7155, 7192, 7733, 8043, 8007, 8769, 11099, 11529, 12816, 12051, 11210, 11586, 11370, 11266, 11086, 11822, 11956, 11741, 14201, 13735, 14881, 14872, 15309, 15077, 15152, 14457, 14945, 14925, 15170, 17767, 23207, 25272, 30977, 31379, 32427, 30121, 28189, 29774, 29007, 29285, 30884, 34132, 57451, 55857, 61763, 63897, 65985, 68087, 63810, 62232, 59571, 60060, 58459, 59398, 51333, 56350, 60824, 57242, 52934, 51104, 49487, 45063, 44743, 44342, 45290, 46931, 40578, 35057, 39603, 36082, 37042, 38171, 37549, 36986, 36802, 36815, 36854, 35333, 34491, 31289, 34509, 33027, 32587, 33177, 33034, 32306, 32420, 31924, 32400, 32708],\n    'vegano': [545, 603, 626, 568, 587, 578, 566, 513, 517, 642, 693, 775, 751, 719, 810, 856, 808, 713, 725, 749, 755, 873, 831, 882, 1477, 1269, 1414, 1377, 1528, 1546, 1450, 1351, 1404, 1573, 1516, 1443, 2894, 2588, 2854, 2921, 2697, 2732, 2617, 2610, 2814, 2933, 2929, 3171, 4831, 5087, 5737, 5323, 4920, 5019, 4967, 4905, 4801, 5221, 5267, 5229, 7172, 6967, 7524, 7531, 7784, 7654, 7686, 7215, 7522, 7464, 7585, 8299, 13972, 15417, 19067, 18991, 19688, 18179, 16962, 17855, 17290, 17462, 18260, 21255, 30373, 28994, 32267, 33075, 34567, 36329, 33814, 33284, 31215, 32174, 30890, 31095, 29598, 32014, 34226, 32549, 29994, 28438, 27725, 24718, 24717, 24278, 24652, 26035, 22238, 19028, 21253, 19359, 19894, 20411, 19996, 19782, 19777, 19574, 19620, 19030, 18456, 16670, 18274, 17316, 17201, 17618, 17326, 16972, 16973, 16757, 17088, 17244],\n    'vegana': [521, 547, 597, 519, 538, 563, 488, 477, 478, 584, 626, 730, 719, 692, 786, 856, 792, 708, 703, 712, 735, 825, 784, 882, 1435, 1204, 1357, 1307, 1419, 1391, 1321, 1269, 1289, 1458, 1404, 1364, 2420, 2154, 2341, 2351, 2197, 2210, 2159, 2153, 2296, 2419, 2383, 2631, 3453, 3557, 3943, 3679, 3393, 3447, 3373, 3335, 3230, 3573, 3636, 3702, 4349, 4172, 4510, 4429, 4488, 4390, 4410, 4212, 4310, 4296, 4376, 5008, 7056, 7477, 8507, 8531, 8911, 8432, 7837, 8316, 7991, 8031, 8489, 10017, 26503, 23671, 25257, 25684, 26177, 26581, 25010, 24419, 23204, 23149, 22596, 22720, 17359, 18423, 20436, 19139, 17651, 16869, 16298, 14611, 14595, 14424, 14671, 15305, 16672, 14457, 15995, 14695, 15152, 15638, 15175, 14922, 14946, 14811, 14964, 14315, 13619, 12282, 13454, 12903, 12599, 12911, 12822, 12384, 12411, 12204, 12417, 12644],\n    'vegetariano': [4462, 4272, 4318, 4357, 4611, 5130, 4905, 4683, 4483, 5026, 5136, 5680, 4741, 4209, 4710, 4979, 4826, 4333, 4202, 3991, 4333, 4458, 4220, 5462, 4254, 3816, 4249, 4214, 4658, 4529, 4504, 4201, 4301, 4536, 4363, 4632, 4309, 3949, 4394, 4218, 4323, 4292, 4257, 4118, 4364, 4531, 4465, 4618, 5160, 5231, 5742, 5396, 5104, 5214, 5101, 5110, 4984, 5422, 5635, 5353, 6229, 5824, 6251, 6178, 6386, 6194, 6116, 5913, 5988, 5980, 5956, 6663, 5991, 5626, 5900, 5845, 5937, 5817, 5792, 5600, 5634, 5798, 5923, 6213, 10792, 9887, 10839, 10757, 11417, 11843, 11094, 10695, 10118, 10258, 9897, 10664, 10892, 11467, 12630, 11728, 11317, 10617, 10309, 9363, 8935, 8565, 8743, 9148, 7354, 6561, 7258, 6614, 6720, 6948, 6806, 6735, 6653, 6745, 6666, 6174, 6858, 6312, 6927, 6554, 6533, 6701, 6650, 6496, 6539, 6414, 6599, 6646],\n    'vegetariana': [3249, 3192, 3195, 3218, 3449, 3918, 3634, 3432, 3258, 3757, 3811, 4322, 3532, 3251, 3687, 3826, 3753, 3352, 3242, 3131, 3374, 3442, 3210, 4152, 3163, 2816, 3194, 3193, 3480, 3409, 3394, 3173, 3247, 3437, 3290, 3898, 3968, 3662, 4014, 3942, 4032, 3986, 3959, 3794, 4014, 4174, 4118, 4648, 4710, 4768, 5218, 4905, 4616, 4715, 4632, 4608, 4490, 4920, 5087, 4982, 5325, 5057, 5393, 5334, 5510, 5340, 5275, 5136, 5183, 5176, 5195, 5806, 5851, 5567, 5819, 5770, 5863, 5769, 5727, 5556, 5580, 5670, 5849, 6250, 11723, 10738, 11718, 11663, 12301, 12792, 11956, 11529, 10842, 10985, 10582, 11420, 10787, 11345, 12435, 11458, 10996, 10294, 9993, 9128, 8684, 8316, 8479, 8878, 8041, 7159, 7868, 7155, 7266, 7474, 7311, 7235, 7153, 7203, 7168, 6611, 6598, 5971, 6672, 6386, 6271, 6422, 6344, 6174, 6197, 6088, 6224, 6343],\n    'vegane': [2, 1, 1, 1, 6, 10, 2, 2, 1, 4, 3, 5, 5, 2, 4, 5, 8, 4, 5, 4, 3, 7, 5, 6, 8, 9, 10, 11, 12, 11, 9, 8, 11, 10, 9, 12, 15, 17, 21, 24, 25, 24, 22, 21, 25, 26, 27, 27, 10, 12, 14, 13, 14, 15, 13, 12, 11, 14, 15, 13, 13, 14, 16, 15, 17, 16, 15, 14, 13, 14, 15, 16, 12, 13, 15, 14, 16, 15, 14, 13, 12, 14, 15, 16, 65, 58, 64, 65, 68, 72, 66, 64, 60, 62, 59, 61, 115, 124, 136, 126, 119, 112, 109, 98, 96, 95, 98, 104, 165, 152, 171, 158, 162, 168, 165, 162, 160, 162, 161, 154, 215, 198, 223, 208, 201, 212, 209, 203, 197, 196, 205, 199],\n    'lactovegetariana': [10, 8, 9, 11, 12, 11, 10, 9, 9, 11, 12, 12, 11, 10, 12, 13, 12, 11, 11, 10, 11, 12, 11, 12, 9, 8, 10, 9, 11, 10, 10, 9, 10, 10, 9, 9, 9, 8, 9, 9, 9, 9, 9, 8, 9, 10, 9, 10, 18, 17, 19, 18, 16, 17, 16, 16, 16, 17, 18, 17, 16, 15, 17, 17, 18, 17, 17, 16, 15, 16, 17, 17, 35, 36, 39, 38, 39, 38, 37, 35, 36, 37, 38, 38, 108, 98, 107, 106, 111, 116, 108, 104, 99, 101, 98, 100, 132, 141, 151, 140, 131, 124, 121, 110, 108, 107, 111, 116, 91, 82, 90, 83, 85, 89, 88, 86, 85, 86, 86, 81, 65, 61, 68, 63, 62, 66, 65, 64, 63, 62, 65, 62],\n    'ovolactovegetariana': [8, 7, 8, 9, 10, 9, 8, 8, 8, 9, 10, 10, 9, 8, 10, 11, 10, 9, 9, 8, 9, 10, 9, 10, 7, 6, 7, 7, 8, 7, 7, 7, 7, 7, 7, 7, 8, 7, 8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 15, 14, 16, 15, 14, 15, 14, 14, 14, 15, 16, 15, 15, 14, 15, 15, 16, 15, 15, 14, 14, 14, 15, 15, 33, 34, 36, 35, 36, 35, 34, 33, 34, 34, 35, 35, 99, 90, 98, 98, 102, 106, 99, 95, 91, 93, 90, 91, 122, 130, 139, 129, 121, 115, 112, 101, 99, 98, 102, 107, 84, 76, 83, 77, 79, 82, 81, 80, 79, 79, 79, 75, 63, 59, 65, 61, 60, 63, 62, 62, 61, 60, 63, 60],\n    'lactovegetariano': [12, 10, 11, 12, 13, 12, 11, 10, 10, 12, 13, 13, 11, 10, 11, 12, 11, 10, 10, 9, 10, 11, 10, 11, 6, 5, 6, 6, 7, 6, 6, 6, 6, 7, 6, 6, 13, 12, 13, 13, 13, 13, 13, 12, 13, 13, 13, 13, 21, 20, 22, 21, 19, 20, 19, 19, 19, 20, 21, 20, 18, 17, 19, 19, 20, 19, 19, 18, 17, 18, 19, 19, 31, 32, 35, 34, 35, 34, 33, 31, 32, 33, 34, 34, 80, 73, 80, 79, 83, 87, 80, 77, 73, 75, 72, 73, 92, 99, 108, 99, 92, 87, 85, 76, 74, 73, 77, 81, 95, 86, 94, 87, 89, 93, 92, 90, 89, 90, 89, 85, 36, 33, 37, 34, 34, 36, 36, 35, 34, 34, 36, 34],\n    'ovolactovegetariano': [10, 8, 9, 10, 11, 10, 9, 8, 8, 10, 11, 11, 9, 8, 9, 10, 9, 8, 8, 8, 9, 9, 9, 9, 5, 4, 5, 5, 6, 5, 5, 5, 5, 6, 5, 5, 10, 9, 10, 10, 10, 10, 10, 9, 10, 10, 10, 10, 19, 18, 20, 19, 18, 19, 18, 18, 17, 18, 19, 18, 16, 15, 16, 16, 17, 16, 16, 15, 14, 15, 16, 16, 29, 29, 32, 31, 32, 31, 30, 29, 29, 30, 31, 31, 74, 68, 74, 73, 77, 80, 74, 71, 67, 69, 66, 67, 85, 91, 99, 91, 85, 80, 78, 70, 68, 67, 71, 75, 89, 81, 89, 82, 84, 87, 86, 84, 83, 84, 83, 79, 33, 30, 34, 31, 31, 33, 33, 32, 31, 31, 33, 31],\n    'crudivora': [3, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 8, 7, 8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 12, 11, 12, 12, 11, 11, 11, 11, 12, 12, 12, 12, 17, 16, 18, 17, 16, 17, 16, 16, 16, 17, 18, 17, 14, 13, 15, 15, 15, 15, 15, 14, 13, 14, 15, 15, 17, 16, 18, 17, 18, 17, 17, 16, 15, 16, 17, 17, 15, 14, 15, 15, 16, 16, 15, 14, 13, 14, 15, 15, 18, 19, 20, 19, 18, 17, 17, 16, 15, 15, 16, 16, 24, 22, 24, 22, 23, 24, 24, 23, 22, 23, 23, 21, 37, 34, 38, 35, 35, 37, 36, 36, 35, 35, 37, 35],\n    'crudivoro': [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 6, 5, 6, 6, 6, 6, 6, 5, 6, 6, 6, 6, 15, 14, 15, 15, 14, 14, 14, 14, 15, 15, 15, 15, 17, 17, 18, 17, 16, 17, 16, 16, 16, 17, 18, 17, 14, 13, 14, 14, 15, 14, 14, 13, 13, 13, 14, 14, 19, 18, 20, 19, 20, 19, 19, 18, 17, 18, 19, 19, 22, 21, 22, 22, 23, 24, 22, 21, 20, 21, 22, 22, 15, 16, 17, 16, 15, 14, 14, 13, 12, 12, 13, 13, 12, 11, 12, 11, 12, 12, 12, 12, 11, 12, 12, 11, 23, 22, 24, 22, 22, 23, 23, 22, 21, 21, 23, 22],\n    'pescetariana': [1, 1, 1, 1, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 3, 4, 4, 4, 4, 4, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 5, 6, 6, 6, 6, 6, 5, 5, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 17, 16, 17, 17, 18, 19, 17, 16, 15, 16, 17, 17, 34, 36, 38, 36, 34, 32, 32, 29, 28, 28, 29, 31, 51, 47, 52, 48, 49, 51, 50, 49, 48, 49, 49, 46, 22, 20, 22, 21, 21, 22, 22, 21, 20, 20, 22, 21],\n    'frugivoro': [4, 3, 4, 4, 4, 4, 4, 3, 3, 4, 4, 4, 3, 3, 4, 4, 4, 3, 3, 3, 3, 4, 3, 4, 7, 6, 7, 7, 7, 7, 7, 6, 7, 7, 7, 7, 7, 6, 7, 7, 7, 7, 7, 6, 7, 7, 7, 7, 6, 6, 7, 6, 6, 7, 6, 6, 6, 7, 7, 6, 7, 6, 7, 7, 7, 7, 7, 6, 6, 7, 7, 7, 17, 16, 18, 17, 18, 17, 17, 16, 15, 16, 17, 17, 27, 25, 27, 27, 28, 29, 27, 26, 25, 25, 27, 27, 16, 17, 18, 17, 16, 15, 15, 14, 13, 13, 14, 14, 23, 21, 23, 22, 22, 23, 23, 22, 21, 22, 22, 20, 16, 14, 16, 15, 15, 16, 15, 15, 14, 14, 16, 15],\n    'frugivora': [1, 1, 1, 1, 2, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 10, 9, 10, 10, 10, 10, 10, 9, 9, 9, 10, 10, 9, 8, 9, 9, 10, 10, 9, 9, 8, 9, 9, 9, 12, 13, 14, 13, 12, 11, 11, 10, 10, 10, 10, 11, 11, 10, 11, 10, 11, 11, 11, 11, 11, 11, 11, 10, 9, 8, 9, 8, 8, 9, 9, 8, 8, 8, 9, 8],\n    'flexitariano': [2, 1, 0, 0, 2, 2, 1, 0, 0, 2, 2, 2, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 7, 7, 8, 8, 8, 7, 7, 7, 7, 7, 7, 7, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 13, 12, 13, 13, 14, 14, 13, 12, 12, 12, 13, 13, 10, 10, 11, 10, 10, 9, 9, 8, 8, 8, 9, 9, 22, 20, 22, 21, 21, 22, 22, 21, 20, 21, 21, 19, 22, 20, 22, 21, 21, 22, 22, 21, 20, 20, 22, 21],\n    'flexitariana': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 12, 11, 12, 12, 13, 13, 12, 12, 11, 12, 12, 12, 11, 11, 12, 11, 11, 10, 10, 9, 9, 9, 10, 10, 12, 11, 12, 11, 11, 12, 12, 11, 11, 11, 11, 10, 11, 10, 11, 10, 10, 11, 11, 11, 10, 10, 11, 11],\n    'ovovegetariano': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],\n    'semivegetariana': [2, 1, 1, 1, 3, 3, 2, 1, 1, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n    'ovovegetariana': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],\n    'semivegetariano': [1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n    'piscitariana': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 2, 2, 1, 1, 2, 2],\n    'piscitariano': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n    'pesco-vegetariana': [0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    'pescovegetariana': [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    'pescovegetariano': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    'pesco-vegetariano': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    'apivegetariano': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0],\n    'apivegetariana': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n}\ndf_mensal = pd.DataFrame(dados_mensais)\ndf_mensal['created_at'] = pd.to_datetime(df_mensal['created_at'])\n\n\n# --- 3. DEFINI\u00c7\u00c3O DE TODAS AS KEYWORDS (SEM FILTRO) ---\n# Pega todas as colunas, exceto 'created_at'\nkeywords = [col for col in df_anual.columns if col != \"created_at\"]\n# Ordena a lista alfabeticamente para facilitar a navega\u00e7\u00e3o\nkeywords.sort()\n\n\n# --- UI com Sidebar Colaps\u00e1vel ---\napp_ui = ui.page_sidebar(\n    # Defini\u00e7\u00e3o da barra lateral\n    ui.sidebar(\n        ui.input_radio_buttons(\n            \"periodicidade\",\n            \"Selecione a periodicidade:\",\n            {\"Anual\": \"Anual\", \"Mensal\": \"Mensal\"},\n            selected=\"Anual\"\n        ),\n        ui.input_select(\n            \"keyword_select\",\n            \"Selecione a palavra-chave:\",\n            {k: k for k in keywords},\n            selected=\"vegan\"\n        ),\n        title=\" M\u00e9tricas de Tweets\",\n        collapsible=True,\n        collapsed=False,\n    ),\n    \n\n    ui.tags.head(\n        ui.tags.script(src=\"https://code.highcharts.com/highcharts.js\")\n    ),\n    \n\n    ui.card(\n        ui.output_ui(\"grafico_html\"),\n        ui.output_ui(\"grafico_script\"),\n    ),\n    \n\n    title=\"An\u00e1lise de M\u00e9tricas de Tweets\",\n)\n\n\ndef server(input, output, session):\n    @render.ui\n    def grafico_html():\n        return ui.HTML('<div id=\"container\" style=\"height: 420px; margin-top:8px;\"></div>')\n\n    @render.ui\n    def grafico_script():\n        kw = input.keyword_select()\n        periodicidade = input.periodicidade()\n        \n        if not kw:\n            return\n\n        if periodicidade == \"Anual\":\n            df = df_anual\n            x_vals = df[\"created_at\"].astype(str).tolist()\n        else: # Mensal\n            df = df_mensal\n            x_vals = df[\"created_at\"].dt.strftime(\"%Y-%m\").tolist()\n        \n        series_data = df[kw].tolist() if kw in df.columns else []\n\n        cfg = {\n            \"chart\": {\"type\": \"area\"},\n            \"title\": {\"text\": f\"M\u00e9tricas de Tweets para \u201c{kw}\u201d ({periodicidade})\"},\n            \"xAxis\": {\"categories\": x_vals},\n            \"yAxis\": {\"title\": {\"text\": \"Quantidade\"}},\n            \"tooltip\": {\n                \"shared\": True,\n                \"crosshairs\": True,\n                \"pointFormat\": '<span style=\"color:{series.color}\">\u25cf</span> {series.name}: <b>{point.y:,.0f}</b><br/>'\n            },\n            \"plotOptions\": {\n                \"area\": {\"stacking\": None, \"marker\": {\"enabled\": False, \"symbol\": \"circle\"}}\n            },\n            \"legend\": {\"enabled\": False},\n            \"series\": [{\n                \"name\": kw,\n                \"data\": series_data,\n                \"color\": \"#696969\",\n                \"type\": \"area\"\n            }],\n            \"credits\": {\"enabled\": False}\n        }\n\n        return ui.tags.script(\n            f\"\"\"\n            (function render() {{\n                var go = (typeof Highcharts !== 'undefined') && document.getElementById('container');\n                if (!go) {{ setTimeout(render, 50); return; }}\n                Highcharts.chart('container', {json.dumps(cfg)});\n            }})();\n            \"\"\"\n        )\n\napp = App(app_ui, server)", "type": "text"}, {"name": "README.md", "content": "# veganismo-twitter-palavraschavee", "type": "text"}]